/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ui;

import dao.ChuyenDeDAO;
import dao.HocVienDAO;
import dao.KhoaHocDAO;
import dao.NguoiHocDAO;
import entity.ChuyenDe;
import entity.HocVien;
import entity.KhoaHoc;
import entity.NguoiHoc;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import utills.Auth;
import utills.MsgBox;
import utills.XImage;
import utills.Xdate;

/**
 *
 * @author NAM PC
 */
public class HocVienJDialog extends javax.swing.JDialog {

    /**
     * Creates new form HocVienJDialog
     */
    public HocVienJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbochuyende = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        cbokhoahoc = new javax.swing.JComboBox<>();
        tabs = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblhocvien = new javax.swing.JTable();
        btncapnhatdiem = new javax.swing.JButton();
        btnxoakhoikhoahoc = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        txttimkiem = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblnguoihoc = new javax.swing.JTable();
        btnthemvaokhoahoc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CHUYÊN ĐỀ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        cbochuyende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbochuyendeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbochuyende, 0, 167, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(cbochuyende, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "KHÓA HỌC", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        cbokhoahoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbokhoahocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbokhoahoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(cbokhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tblhocvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblhocvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblhocvienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblhocvien);

        btncapnhatdiem.setText("Cập nhật điểm");
        btncapnhatdiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncapnhatdiemActionPerformed(evt);
            }
        });

        btnxoakhoikhoahoc.setText("Xóa khỏi khóa học");
        btnxoakhoikhoahoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoakhoikhoahocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnxoakhoikhoahoc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btncapnhatdiem)
                .addGap(1, 1, 1))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btncapnhatdiem)
                    .addComponent(btnxoakhoikhoahoc))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        tabs.addTab("HỌC VIÊN", jPanel3);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm Kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        txttimkiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txttimkiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txttimkiem)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(txttimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        tblnguoihoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblnguoihoc);

        btnthemvaokhoahoc.setText("Thêm vào khóa học");
        btnthemvaokhoahoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemvaokhoahocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnthemvaokhoahoc)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnthemvaokhoahoc)
                .addGap(6, 6, 6))
        );

        tabs.addTab("NGƯỜI HỌC", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnxoakhoikhoahocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoakhoikhoahocActionPerformed
        // TODO add your handling code here:
        removeHocVien();
    }//GEN-LAST:event_btnxoakhoikhoahocActionPerformed

    private void btncapnhatdiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncapnhatdiemActionPerformed
        // TODO add your handling code here:
        updateDiem();
    }//GEN-LAST:event_btncapnhatdiemActionPerformed

    private void btnthemvaokhoahocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemvaokhoahocActionPerformed
        // TODO add your handling code here:
        addHocVien();
    }//GEN-LAST:event_btnthemvaokhoahocActionPerformed

    private void cbochuyendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbochuyendeActionPerformed
        // TODO add your handling code here:
        fillComboBoxKhoaHoc();
    }//GEN-LAST:event_cbochuyendeActionPerformed

    private void cbokhoahocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbokhoahocActionPerformed
        // TODO add your handling code here:
        fillTableHocVien();
    }//GEN-LAST:event_cbokhoahocActionPerformed

    private void txttimkiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttimkiemKeyReleased
        // TODO add your handling code here:
        fillTableHocVien();
    }//GEN-LAST:event_txttimkiemKeyReleased

    private void tblhocvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblhocvienMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblhocvienMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HocVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HocVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HocVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HocVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HocVienJDialog dialog = new HocVienJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncapnhatdiem;
    private javax.swing.JButton btnthemvaokhoahoc;
    private javax.swing.JButton btnxoakhoikhoahoc;
    private javax.swing.JComboBox<String> cbochuyende;
    private javax.swing.JComboBox<String> cbokhoahoc;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblhocvien;
    private javax.swing.JTable tblnguoihoc;
    private javax.swing.JTextField txttimkiem;
    // End of variables declaration//GEN-END:variables

    ChuyenDeDAO chuyenDeDAO = new ChuyenDeDAO();
    KhoaHocDAO khoaHocDAO = new KhoaHocDAO();
    NguoiHocDAO nguoiHocDAO = new NguoiHocDAO();
    HocVienDAO hocVienDAO = new HocVienDAO();
    
    void init() {
        this.setLocationRelativeTo(null);
        this.setIconImage(XImage.getAppIcon());
        
        initTable();
        fillComboBoxChuyenDe();
        
        DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
        cellRenderer.setHorizontalAlignment(JLabel.CENTER);
        
        TableColumnModel tableColumnModel = tblhocvien.getColumnModel();
        tableColumnModel.getColumn(0).setMaxWidth(40);
        tableColumnModel.getColumn(1).setMaxWidth(50);
        tableColumnModel.getColumn(2).setMaxWidth(80);
        tableColumnModel.getColumn(4).setMaxWidth(50);
        
        tblnguoihoc.setDefaultEditor(Object.class, null);
    }
    
    void initTable() {
        DefaultTableModel tableModel;
        tableModel = (DefaultTableModel) tblhocvien.getModel();
        tableModel.setColumnIdentifiers(new String[]{"TT", "MÃ HV", "MÃ NH", "HỌ TÊN", "ĐIỂM"});
        
        tableModel = (DefaultTableModel) tblnguoihoc.getModel();
        tableModel.setColumnIdentifiers(new String[]{"MÃ NH", "HỌ VÀ TÊN", "GIỚI TÍNH", "NGÀY SINH", "ĐIỆN THOẠI", "EMAIL"});
    }
    
    void fillComboBoxChuyenDe() {
        DefaultComboBoxModel comboBoxModel = (DefaultComboBoxModel) cbochuyende.getModel();
        comboBoxModel.removeAllElements();
        
        try {
            List<ChuyenDe> list = chuyenDeDAO.selectAll();
            for (ChuyenDe cd : list) {
                comboBoxModel.addElement(cd);
            }
            this.fillComboBoxKhoaHoc();
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi cbo chuyên đề");
        }
    }
    
    void fillComboBoxKhoaHoc() {
        DefaultComboBoxModel comboBoxModel = (DefaultComboBoxModel) cbokhoahoc.getModel();
        comboBoxModel.removeAllElements();
        
        try {
            ChuyenDe cd = (ChuyenDe) cbochuyende.getSelectedItem();
            if (cd != null) {
                List<KhoaHoc> list = khoaHocDAO.selectByChuyenDe(cd.getMaCD());
                for (KhoaHoc kh : list) {
                    comboBoxModel.addElement(kh);
                }
                this.fillTableHocVien();
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi cbo khoa học");
        }
    }
    
    void fillTableHocVien() {
        DefaultTableModel tableModel = (DefaultTableModel) tblhocvien.getModel();
        tableModel.setRowCount(0);
        try {
            KhoaHoc kh = (KhoaHoc) cbokhoahoc.getSelectedItem();
            if (kh != null) {
                List<HocVien> list = hocVienDAO.selectByKhoaHoc(kh.getMaKH());
                for (int i = 0; i < list.size(); i++) {
                    HocVien hv = list.get(i);
                    String hoTen = nguoiHocDAO.selectById(hv.getMaNH()).getHoTen();
                    tableModel.addRow(new Object[]{i + 1, hv.getMaHV(), hv.getMaNH(), hoTen, hv.getDiem()});
                }
            }
            this.fillTableNguoiHoc();
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
            throw new RuntimeException();
        }
    }
    
    void fillTableNguoiHoc() {
        DefaultTableModel tableModel = (DefaultTableModel) tblnguoihoc.getModel();
        tableModel.setRowCount(0);
        try {
            KhoaHoc kh = (KhoaHoc) cbokhoahoc.getSelectedItem();
            if (kh != null) {
                String ketWord = txttimkiem.getText();
                List<NguoiHoc> list = nguoiHocDAO.selectByNotInCourse(kh.getMaKH(), ketWord);
                for (NguoiHoc nh : list) {
                    tableModel.addRow(new Object[]{nh.getMaNH(), nh.getHoTen(), nh.isGioiTinh() ? true : false,
                        Xdate.toString(nh.getNgaySinh()), nh.getDienThoai(), nh.getEmail()});
                }
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi người học");
        }
    }
    
    void addHocVien() {
        KhoaHoc kh = (KhoaHoc) cbokhoahoc.getSelectedItem();
        for (int row : tblnguoihoc.getSelectedRows()) {
            HocVien hv = new HocVien();
            hv.setMaKH(kh.getMaKH());
            hv.setDiem(0);
            hv.setMaNH((String) tblnguoihoc.getValueAt(row, 0));
            hocVienDAO.insert(hv);
        }
        this.fillTableHocVien();
        this.tabs.setSelectedIndex(0);
    }
    
    void removeHocVien() {
        if (!Auth.isManage()) {
            MsgBox.alert(this, "Bạn không có quyền xóa học viên này");
        } else {
            if (MsgBox.confirm(this, "Bạn muốn xóa học viên được chọn ?")) {
                for (int row : tblhocvien.getSelectedRows()) {
                    int mahv = (Integer) tblhocvien.getValueAt(row, 1);
                    hocVienDAO.delete(mahv);
                }
                fillTableHocVien();
            }
        }
    }
    
    void updateDiem() {
//        for (int i = 0; i < tblhocvien.getRowCount(); i++) {
//            int mahv = (Integer) tblhocvien.getValueAt(i, 1);
//            HocVien hv = hocVienDAO.selectById(mahv);
//            hv.setDiem((Double) tblhocvien.getValueAt(i, 4));
//            hocVienDAO.update(hv);
//        }
//        MsgBox.alert(this, "Cập nhật điểm thành công");
//        
        
        for (int i = 0; i < tblhocvien.getRowCount(); i++) {
            int mahv = (int) tblhocvien.getValueAt(i, 1);            
            double diem = (Double.parseDouble(tblhocvien.getValueAt(i, 4).toString()));
            HocVien hocVien = hocVienDAO.selectById(String.valueOf(mahv));
            hocVien.setDiem(diem);
            hocVienDAO.update(hocVien);
        }
        MsgBox.alert(this, "Cập nhật điểm thành công");
    }
}
